// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ACCOUNTANT 
  MANAGER 
  ADMIN
}

enum RequestStatus {
  PENDING 
  APPROVED 
  REJECTED
}

model User {
  id        Int @id @default(autoincrement())
  email     String @unique
  username  String @db.VarChar(30) @unique
  password  String
  role      Role   @default(ACCOUNTANT)
  passwordResetToken String? 
  passwordResetTokenExpiry DateTime?
  firstName String
  lastName String
  profilePicture String?
  isActive Boolean @default(true)
  isSuspended Boolean @default(false)
  suspensionStart DateTime?
  suspensionEnd DateTime?
  failedLoginAttempts Int @default(0)
  lastPasswordChangeAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  securityQuestionId Int
  securityAnswer String

  securityQuestion SecurityQuestion? @relation(fields: [securityQuestionId], references: [id])
  passwordHistory PasswordHistory[]
  accessRequests AccessRequest[]
}

model SecurityQuestion {
  id Int @id @default(autoincrement())
  question String @unique
  
  users User[]
}

model PasswordHistory {
  id Int @id @default(autoincrement())
  userId Int 
  oldPassword String 
  createdAt DateTime @default(now())
  isExpired Boolean @default(false)

  user User @relation(fields: [userId], references: [id]) 
}

model AccessRequest {
  id Int @id @default(autoincrement())
  firstName String  
  lastName String 
  email String 
  address String 
  dateOfBirth DateTime 
  status RequestStatus @default(PENDING)
  createdAt DateTime @default(now())
  userId Int

  user User @relation(fields: [userId], references: [id])
}

/*

1. User table example:

id | email                 | username   | password         |   role     | passwordResetToken | passwordResetTokenExpiry | firstName | lastName | profilePicture               | isActive | isSuspended | suspensionStart | suspensionEnd | failedLoginAttempts | lastPasswordChangeAt     | createdAt           | updatedAt          | securityQuestionId | securityAnswer |
1  | jane.smith@email.com | Jsmith0125 | $whosquinonqoqno | ACCOUNTANT | null                | null                     | Jane      | Smith    | https://example.com/jane.jpg | true     | false       | null           | null           | 0                   | 2023-10-01 12:00:00     | 2023-10-01 12:00:00 | 2023-10-01 12:00:00 | 1                  | $oqnqqno2ifeni |


2. SecurityQuestion table example:
id | question
1  | What is your favorite color?
2  | What is your mother's maiden name?

3. PasswordHistory table example:
id | userId | oldPassword         | createdAt           | isExpired
1  | 2      | $whosquinonqoqno    | 2023-10-01 12:00:00 | true
2  | 1      | $whoswindwnonqoqno  | 2023-10-01 12:00:00 | false

4. AccessRequest table example:
id | firstName | lastName | email                 | address          | dateOfBirth     | status  | createdAt           | userId
1  | Jane      | Smith    | jane.smith@gmail.com  | 123 Main St, City | 1990-02-01     | PENDING | 2023-10-01 12:00:00 | 1

*/